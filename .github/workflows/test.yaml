name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 01 * * SUN'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: [3.8]
        exclude:
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.8
            # Fiona for Python 3.6 on Windows has build issues
            # See https://github.com/conda-forge/fiona-feedstock/issues/171 for more details
          - os: windows-latest
            python-version: 3.6
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      CHANS_DEV: "-c conda-forge -c pyviz/label/dev"
      CHANS: "-c pyviz"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
      - name: Fetch
        run: git fetch --prune --tags
      - name: conda setup
        run: |
          conda config --set always_yes True
          conda install -c pyviz "pyctdev>=0.5"
          doit ecosystem_setup
          doit env_create ${{ env.CHANS_DEV}} --python=${{ matrix.python-version }}
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install ${{ env.CHANS_DEV }} "pip<21.2.1"
          conda list
          doit develop_install ${{ env.CHANS_DEV }} -o tests
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_lint
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_lint
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit_deploy
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
