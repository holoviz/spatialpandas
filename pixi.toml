[project]
name = "lumen"
channels = ["pyviz/label/dev", "conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tasks]
install = 'python -m pip install --no-deps --disable-pip-version-check -e .'

[activation.env]
PYTHONIOENCODING = "utf-8"
DASK_DATAFRAME__QUERY_PLANNING = "False"

[environments]
test-39 = ["py39", "test-core", "test", "test-task"]
test-310 = ["py310", "test-core", "test", "test-task"]
test-311 = ["py311", "test-core", "test", "test-task"]
test-312 = ["py312", "test-core", "test", "test-task"]
test-core = ["py312", "test-core", "test-core-task"]
# build = ["py311", "build"]
# lint = ["py311", "lint"]

[dependencies]
dask-core = "*"
fsspec = "*"
numba = "*"
pandas = "<2.2" # Temporary upper pin
param = "*"
pyarrow = ">=1.0,<15" # Temporary upper pin
retrying = "*"

[feature.py39.dependencies]
python = "3.9.*"

[feature.py310.dependencies]
python = "3.10.*"

[feature.py311.dependencies]
python = "3.11.*"

[feature.py312.dependencies]
python = "3.12.*"

# [feature.example.dependencies]
# datashader = "*"
# descartes = "*"
# distributed = "*"
# geopandas-base = "*"
# holoviews = "*"
# matplotlib-base = "*"

# =============================================
# =================== TESTS ===================
# =============================================
[feature.test-core.dependencies]
hypothesis = "*"
psutil = "*"
pytest = "*"
pytest-cov = "*"
pytest-github-actions-annotate-failures = "*"
pytest-rerunfailures = "*"
pytest-xdist = "*"

[feature.test-core-task.tasks]
test-unit = 'pytest spatialpandas/tests -n logical --dist loadgroup --skip-slow'

[feature.test.dependencies]
geopandas-base = "*"
hilbertcurve = "*"
# "moto[s3,server]" = "*"
python-snappy = "*"
s3fs = "*"
scipy = "*"
shapely = "*"

[feature.test-task.tasks]
test-unit = 'pytest spatialpandas/tests -n logical --dist loadgroup'

# =============================================
# ================== BUILD ====================
# =============================================
# [feature.build.dependencies]
# python-build = "*"
# conda-build = "*"
#
# [feature.build.tasks]
# build-conda = 'bash scripts/conda/build.sh'
# build-pip = 'python -m build .'

# =============================================
# =================== LINT ====================
# =============================================
# [feature.lint.dependencies]
# pre-commit = "*"
#
# [feature.lint.tasks]
# lint = 'pre-commit run --all-files'
# lint-install = 'pre-commit install'
